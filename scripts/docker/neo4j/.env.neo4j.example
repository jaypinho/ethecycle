#################################################################################
#                                                                               #
#   What appears below are recommendation from neo4j-admin for an installation  #
#   with 1G of memory. Generate your own .env.neo4j file by running:            #
#                                                                               #
#         ./scripts/docker/neo4j/generate_.neo4j.env_file.sh                    #
#                                                                               #
#################################################################################


# Memory settings recommendation:
#
# Assuming the system is dedicated to running Neo4j and has 1.000GiB of memory,
# we recommend a heap size of around 307m, and a page cache of around 52m,
# and that about 665m is left for the operating system, and the native memory
# needed by Lucene and Netty.
#
# Tip: If the indexing storage use is high, e.g. there are many indexes or most
# data indexed, then it might advantageous to leave more memory for the
# operating system.
#
# Tip: Depending on the workload type you may want to increase the amount
# of off-heap memory available for storing transaction state.
# For instance, in case of large write-intensive transactions
# increasing it can lower GC overhead and thus improve performance.
# On the other hand, if vast majority of transactions are small or read-only
# then you can decrease it and increase page cache instead.
#
# Tip: The more concurrent transactions your workload has and the more updates
# they do, the more heap memory you will need. However, don't allocate more
# than 31g of heap, since this will disable pointer compression, also known as
# "compressed oops", in the JVM and make less effective use of the heap.
#
# Tip: Setting the initial and the max heap size to the same value means the
# JVM will never need to change the heap size. Changing the heap size otherwise
# involves a full GC, which is desirable to avoid.
#
# Based on the above, the following memory settings are recommended:
NEO4J_server_memory_heap_initial__size='2500m'
NEO4J_server_memory_heap_max__size='2500m'
NEO4J_server_memory_pagecache_size='739600k'
#
# It is also recommended turning out-of-memory errors into full crashes,
# instead of allowing a partially crashed database to continue running:
NEO4J_server_jvm_additional='-XX:+ExitOnOutOfMemoryError'
#
# The numbers below have been derived based on your current databases located at: '/var/lib/neo4j/data/databases'.
# They can be used as an input into more detailed memory analysis.
# Total size of lucene indexes in all databases: 0k
# Total size of data and native indexes in all databases: 2800m
